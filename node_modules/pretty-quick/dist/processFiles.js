'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _fs = require('fs');

var _prettier = require('prettier');

var prettier = _interopRequireWildcard(_prettier);

var _path = require('path');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

exports.default = (directory, files, { check, config, onExamineFile, onCheckFile, onWriteFile } = {}) => {
  for (const relative of files) {
    onExamineFile && onExamineFile(relative);
    const file = (0, _path.join)(directory, relative);
    const options = Object.assign({}, prettier.resolveConfig.sync(file, {
      config,
      editorconfig: true
    }), { filepath: file });
    const input = (0, _fs.readFileSync)(file, 'utf8');

    if (check) {
      const isFormatted = prettier.check(input, options);
      onCheckFile && onCheckFile(relative, isFormatted);
      continue;
    }

    const output = prettier.format(input, options);

    if (output !== input) {
      (0, _fs.writeFileSync)(file, output);
      onWriteFile && onWriteFile(relative);
    }
  }
};